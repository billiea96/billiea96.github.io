{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","Grid","textAlign","columns","Column","width","Table","celled","stackable","selectable","striped","Header","Row","HeaderCell","colSpan","Search","placeholder","Body","Cell","Label","ribbon","Footer","Menu","floated","pagination","Item","as","icon","Icon","name","Comment","Group","dividing","Avatar","src","Content","Author","Metadata","Text","Actions","Action","Form","reply","TextArea","Button","content","labelPosition","primary","Feed","Event","Summary","User","Date","Meta","Like","Extra","image","images","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b56d1d9a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Feed, Grid, Segment, Table, Search, Menu, List, Label, Icon, Comment, Form, Header, Button } from \"semantic-ui-react\";\n\nclass App extends Component {\n  render() {\n    return(\n      <div>\n      <Grid textAlign=\"center\" columns={1}>\n          <Grid.Column width={12}>\n            <Table celled stackable selectable striped>\n              <Table.Header>\n                <Table.Row textAlign=\"right\">\n                  <Table.HeaderCell colSpan=\"2\"><Search placeholder=\"Search Document....\" /></Table.HeaderCell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.HeaderCell>Nama Dokumen</Table.HeaderCell>\n                  <Table.HeaderCell>Jenis File</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell textAlign=\"left\">\n                    <Label ribbon>Panduan Belajar Javascript</Label>\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"center\">PDF</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell textAlign=\"left\">\n                    Panduan Belajar CSS\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"center\">PDF</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell textAlign=\"left\">\n                    Panduan Belajar React JS\n                  </Table.Cell>\n                  <Table.Cell textAlign=\"center\">PDF</Table.Cell>\n                </Table.Row>\n              </Table.Body>\n\n              <Table.Footer>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='3'>\n                    <Menu floated='right' pagination>\n                      <Menu.Item as='a' icon>\n                        <Icon name='chevron left' />\n                      </Menu.Item>\n                      <Menu.Item as='a'>1</Menu.Item>\n                      <Menu.Item as='a'>2</Menu.Item>\n                      <Menu.Item as='a'>3</Menu.Item>\n                      <Menu.Item as='a'>4</Menu.Item>\n                      <Menu.Item as='a' icon>\n                        <Icon name='chevron right' />\n                      </Menu.Item>\n                    </Menu>\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Footer>\n            </Table>\n            <br/>\n            <Grid columns={3} stackable>\n              <Grid.Column width={6} textAlign=\"left\">\n                  <Comment.Group>\n                    <Header as=\"h3\" textAlign=\"left\" dividing>\n                      Komentar\n                    </Header>\n\n                    <Comment>\n                      <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n                      <Comment.Content>\n                        <Comment.Author as=\"a\">Satria</Comment.Author>\n                        <Comment.Metadata>\n                          <div>Today at 5.42 PM</div>\n                        </Comment.Metadata>\n                        <Comment.Text>Hello..!</Comment.Text>\n                        <Comment.Actions>\n                          <Comment.Action>Reply</Comment.Action>\n                        </Comment.Actions>\n                      </Comment.Content>\n                    </Comment>\n\n                    <Comment>\n                      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                      <Comment.Content>\n                        <Comment.Author as=\"a\">Danang</Comment.Author>\n                        <Comment.Metadata>\n                          <div>Today at 5.50PM</div>\n                        </Comment.Metadata>\n                        <Comment.Text>Kerjakan sesuatu semampu kamu..</Comment.Text>\n                        <Comment.Actions>\n                          <Comment.Action>Reply</Comment.Action>\n                        </Comment.Actions>\n                      </Comment.Content>\n                      <Comment.Group>\n                        <Comment>\n                          <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n                          <Comment.Content>\n                            <Comment.Author as=\"a\">Ricky</Comment.Author>\n                            <Comment.Metadata>Just now</Comment.Metadata>\n                            <Comment.Text>Kamu sekarang dimana danang</Comment.Text>\n                            <Comment.Actions>\n                              <Comment.Action>Reply</Comment.Action>\n                            </Comment.Actions>\n                          </Comment.Content>\n                        </Comment>\n                      </Comment.Group>\n                    </Comment>\n\n                    <Comment>\n                      <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n                      <Comment.Content>\n                        <Comment.Author as=\"a\">Joe</Comment.Author>\n                        <Comment.Metadata>1 days ago</Comment.Metadata>\n                        <Comment.Text>Terima kasih atas nasihatnya</Comment.Text>\n                        <Comment.Actions>\n                          <Comment.Action>Reply</Comment.Action>\n                        </Comment.Actions>\n                      </Comment.Content>\n                    </Comment>\n\n                    <Form reply>\n                      <Form.TextArea />\n                      <Button content=\"Add reply\" icon=\"edit\" labelPosition=\"left\" primary/>\n                    </Form>\n                  </Comment.Group>\n              </Grid.Column>\n\n              <Grid.Column width={4}>\n\n              </Grid.Column>\n\n              <Grid.Column width={6}>\n                  <Feed>\n                    <Feed.Event>\n                      <Feed.Label>\n                        <img src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                      </Feed.Label>\n                      <Feed.Content>\n                        <Feed.Summary>\n                          <Feed.User>Anton</Feed.User> added you as friend.\n                          <Feed.Date>3 Hour Ago</Feed.Date>\n                        </Feed.Summary>\n                        <Feed.Meta>\n                          <Feed.Like>\n                            <Icon name=\"like\" /> 4 likes\n                          </Feed.Like>\n                        </Feed.Meta>\n                      </Feed.Content>\n                    </Feed.Event>\n                    <Feed.Event>\n                      <Feed.Label icon=\"pencil\"/>\n                      <Feed.Content>\n                        <Feed.Summary>\n                          You submitted a new post to the page\n                          <Feed.Date>3 days ago</Feed.Date>\n                        </Feed.Summary>\n                        <Feed.Extra>\n                          Saya senang belajar bahasa pemrograman\n                        </Feed.Extra>\n                        <Feed.Meta>\n                          <Feed.Like>11 likes</Feed.Like>\n                        </Feed.Meta>\n                      </Feed.Content>\n                    </Feed.Event>\n                    <Feed.Event>\n                      <Feed.Label image=\"https://react.semantic-ui.com/images/avatar/small/helen.jpg\" />\n                      <Feed.Content>\n                        <Feed.Date>4 days ago</Feed.Date>\n                        <Feed.Summary>David add 2 new images</Feed.Summary>\n                        <Feed.Extra images>\n                          <img src=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img-v1/c_login_logo.png\" />\n                          <img src=\"https://franciscohodge.com/wp-content/uploads/2018/12/icon-reactjs.png\" />\n                        </Feed.Extra>\n                        <Feed.Meta>\n                          <Feed.Like><Icon name=\"like\" />2 likes</Feed.Like>\n                        </Feed.Meta>\n                      </Feed.Content>\n                    </Feed.Event>\n                  </Feed>\n              </Grid.Column>\n            </Grid>\n          </Grid.Column>\n      </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}